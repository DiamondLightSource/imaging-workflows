apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: dpc
  annotations:
    workflows.argoproj.io/title: dpc
    workflows.argoproj.io/description: |
      dpc is a utility which takes in a scan file inpath, reconstructs the differential phase contrast (DPC) images, and saves the results to an outpath.
    workflows.diamond.ac.uk/parameter-schema: |
      {{- .Files.Get "schema/dpcSchema.json" | nindent 6 }}
    workflows.diamond.ac.uk/ui-schema: |
      {{- .Files.Get "schema/dpcUISchema.json" | nindent 6 }}
spec:
  entrypoint: dpc
  arguments:
    parameters:
      - name: visitdir
        valueFrom:
          configMapKeyRef:
            name: sessionspaces
            key: data_directory
  volumeClaimTemplates:
    - metadata:
        name: tmp
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
        storageClassName: netapp
  templates:
    - name: dpc-mount-files
      script:
        image: gitlab.diamond.ac.uk:5050/i14/i14_utility/dpc:v0.1
        command: [bash]
        source: |
          echo '{{ .Files.Get "notebooks/dpc_autoprocess3.ipynb" | b64enc }}' | base64 -d > /tmp/notebook.ipynb
          echo '{{ .Files.Get "configs/processing.yaml" | b64enc }}' | base64 -d > /tmp/config.yaml
        volumeMounts:
          - name: tmp
            mountPath: /tmp
    - name: dpc-notebook
      inputs:
        parameters:
            - name: outputFolder
              value: /tmp/output
            - name: singleFirst
              value: 280793
      script:
        image: gitlab.diamond.ac.uk:5050/i14/i14_utility/dpc:v0.1
        env:
        - name: HOME
          value: /tmp
        command: [bash]
        source: |
          python -m papermill /tmp/notebook.ipynb /tmp/notebook-parametrized.ipynb \
            -p inpath '{{`{{workflow.parameters.visitdir}}`}}'/scan/i14-'{{`{{inputs.parameters.singleFirst}}`}}'.nxs \
            -p process_configfile /tmp/config.yaml \
            -p outpath '{{`{{inputs.parameters.outputFolder}}`}}'
          python -m jupyter nbconvert --execute --allow-errors --to html --output dpc --output-dir /tmp /tmp/notebook-parametrized.ipynb
        volumeMounts:
          - name: session
            mountPath: "{{`{{workflow.parameters.visitdir}}`}}"
          - name: tmp
            mountPath: /tmp
      outputs:
        artifacts:
          - name: dpc
            path: /tmp/dpc.html
            archive:
              none: {}
      podSpecPatch: |
        containers:
        - name: main
          resources:
            requests:
              cpu: 10
              memory: 30Gi
            limits:
              cpu: 10
              memory: 30Gi
      volumes:
        - name: session
          hostPath:
            path: "{{`{{workflow.parameters.visitdir}}`}}"
            type: Directory
    - name: dpc
      dag:
        tasks:
        - name: files
          template: dpc-mount-files
        - name: notebook
          template: dpc-notebook
          dependencies: [files]
