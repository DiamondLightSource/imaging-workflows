apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: e02-mib2x
spec:
  entrypoint: mib2x
  arguments:
    parameters:
    - name: visitdir
      valueFrom:
        configMapKeyRef:
          name: sessionspaces
          key: data_directory
  templates:
  - name: mib2x
    inputs:
      parameters:
      - name: mib_path
      - name: auto_reshape
        value: true
      - name: no_reshaping
        value: false
      - name: use_fly_back
        value: false
      - name: known_shape
        value: false
      - name: reshape_option
        value: "{{= inputs.parameters.auto_reshape == true ? --auto-reshape :
                    inputs.parameters.no_reshaping == true ? --no-reshaping :
                    inputs.parameters.use_fly_back == true ? --use-fly-back :
                    inputs.parameters.known_shape == true ? --known-shape : ''
                 }}"
      - name: Scan_X
        value: 256
      - name: Scan_Y
        value: 256
      - name: iBF
        value: true
      - name: ibf_option
        value: "{{= inputs.parameters.iBF == true ? --ibf : '' }}"
      - name: bin_sig_factor
        value: 4
      - name: bin_nav_factor
        value: 4
      - name: create_json
        value: true
      - name: create_json_option
        value: "{{= inputs.parameters.create_json == true ? --create-json : '' }}"
      - name: ptycho_config
        value: ""
      - name: ptycho_template
        value: ""
      - name: nprocs
        value: 8
      - name: memory
        value: 16Gi
      - name: DEBUG
        value: 1
    container:
      image: ghcr.io/epsic-dls/mib2x:1.0.0
      imagePullPolicy: Always
      env:
      - name: BLOSC_NTHREADS
        value: "{{ inputs.parameters.nprocs }}"
      - name: OMP_NUM_THREADS
        value: "{{ inputs.parameters.nprocs }}"
      - name: M2X_DEBUG
        value: "{{ inputs.parameters.DEBUG }}"
      command: [python]
      args:
      - "mib_convert.py"
      - "{{ inputs.parameters.mib_path }}"
      - "{{ inputs.parameters.reshape_option }}"
      - "--scan-x={{ inputs.parameters.Scan_X }}"
      - "--scan-y={{ inputs.parameters.Scan_Y }}"
      - "{{ inputs.parameters.ibf_option }}"
      - "--bin-sig-factor={{ inputs.parameters.bin_sig_factor }}"
      - "--bin-nav-factor={{ inputs.parameters.bin_nav_factor }}"
      - "{{ inputs.parameters.create_json_option }}"
      volumeMounts:
      - name: session
        mountPath: "{{ workflow.parameters.visitdir }}"
    podSpecPatch: |
      containers:
      - name: main
        resources:
          requests:
            cpu: "{{ inputs.parameters.nprocs }}"
            memory: "{{ inputs.parameters.memory }}"
          limits:
            cpu: "{{ inputs.parameters.nprocs }}"
            memory: "{{ inputs.parameters.memory }}"
    volumes:
    - name: session
      hostPath:
        path:  "{{ workflow.parameters.visitdir }}"
        type: Directory
    tolerations:
    - key: nodetype
      operator: Equal
      value: cs05r_gpfs
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
            - key: has_gpfs03
              operator: In
              values:
              - "true"
