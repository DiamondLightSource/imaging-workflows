apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: e02-mib2x
  annotations:
    workflows.argoproj.io/title: ePSIC mib conversion
    workflows.argoproj.io/description: |
      Convert MIB file to hdf5/hspy files
    workflows.diamond.ac.uk/parameter-schema.mib_path: |
      {
        "type": "string"
      }
    workflows.diamond.ac.uk/parameter-schema.reshape_option: |
      {
        "type": "string",
        "oneOf": [
          {
            "const": "--auto-reshape",
            "title": "Auto"
          },
          {
            "const": "--no-reshaping",
            "title": "None"
          },
          {
            "const": "--use-fly-back",
            "title": "Fly-back"
          },
          {
            "const": "--known-shape",
            "title": "By known shape"
          }
        ],
        "default": "--auto-reshape"
      }
    workflows.diamond.ac.uk/parameter-schema.Scan_X: |
      {
        "type": "integer",
        "minimum": 0,
        "default": 256
      }
    workflows.diamond.ac.uk/parameter-schema.Scan_Y: |
      {
        "type": "integer",
        "minimum": 0,
        "default": 256
      }
    workflows.diamond.ac.uk/parameter-schema.iBF: |
      {
        "type": "boolean",
        "default": true
      }
    workflows.diamond.ac.uk/parameter-schema.bin_sig_factor: |
      {
        "type": "integer",
        "minimum": 0,
        "maximum": 8,
        "default": 4
      }
    workflows.diamond.ac.uk/parameter-schema.bin_nav_factor: |
      {
        "type": "integer",
        "minimum": 0,
        "maximum": 8,
        "default": 4
      }
    workflows.diamond.ac.uk/parameter-schema.create_json: |
      {
        "type": "boolean",
        "default": false
      }
    workflows.diamond.ac.uk/parameter-schema.ptycho_config: |
      {
        "type": "string",
        "default": ""
      }
    workflows.diamond.ac.uk/parameter-schema.ptycho_template: |
      {
        "type": "string",
        "default": ""
      }
    workflows.diamond.ac.uk/parameter-schema.nprocs: |
      {
        "type": "integer",
        "minimum": 0,
        "default": 8
      }
    workflows.diamond.ac.uk/parameter-schema.memory: |
      {
        "type": "string",
        "pattern": "^[0-9]+[GMK]i$",
        "default": "16Gi"
      }
    workflows.diamond.ac.uk/parameter-schema.DEBUG: |
      {
        "type": "integer",
        "default": 1
      }
    workflows.diamond.ac.uk/ui-schema: |
      {{- .Files.Get "schema/mib2x_ui.json" | nindent 6 }}
spec:
  entrypoint: mib2x
  arguments:
    parameters:
    - name: visitdir
      valueFrom:
        configMapKeyRef:
          name: sessionspaces
          key: data_directory
  templates:
  - name: mib2x
    inputs:
      parameters:
      - name: mib_path
      - name: reshape_option
        value: "--auto-reshape"
      - name: Scan_X
        value: 256
      - name: Scan_Y
        value: 256
      - name: iBF
        value: true
      - name: bin_sig_factor
        value: 4
      - name: bin_nav_factor
        value: 4
      - name: create_json
        value: true
      - name: ptycho_config
        value: ""
      - name: ptycho_template
        value: ""
      - name: nprocs
        value: 8
      - name: memory
        value: 16Gi
      - name: DEBUG
        value: 1
    script:
      image: ghcr.io/epsic-dls/mib2x:1.0.0
      imagePullPolicy: Always
      env:
      - name: BLOSC_NTHREADS
        value: "{{`{{ inputs.parameters.nprocs }}`}}"
      - name: OMP_NUM_THREADS
        value: "{{`{{ inputs.parameters.nprocs }}`}}"
      - name: M2X_DEBUG
        value: "{{`{{ inputs.parameters.DEBUG }}`}}"
      command: [sh]
      source: |
        #!/bin/sh
        set -e

        cmd=("python" "mib_convert.py")
        cmd+=("--mib-path={{`{{ inputs.parameters.mib_path }}`}}")
        cmd+=("{{`{{ inputs.parameters.reshape_option }}`}}")
        cmd+=("--scan-x={{`{{ inputs.parameters.Scan_X }}`}}")
        cmd+=("--scan-y={{`{{ inputs.parameters.Scan_Y }}`}}")
        if [ "{{`{{ inputs.parameters.iBF }}`}}" = "true" ]
        then
          cmd+=("--ibf")
        fi
        cmd+=("--bin-sig-factor={{`{{ inputs.parameters.bin_sig_factor }}`}}")
        cmd+=("--bin-nav-factor={{`{{ inputs.parameters.bin_nav_factor }}`}}")
        if [ "{{`{{ inputs.parameters.create_json }}`}}" = "true" ]
        then
          cmd+=("--create-json")
        fi
        if [ -n "{{`{{ inputs.parameters.ptycho_config }}`}}" ]
        then
          cmd+=("--ptycho-config={{`{{ inputs.parameters.ptycho_config }}`}}")
        fi
        if [ -n "{{`{{ inputs.parameters.ptycho_template }}`}}" ]
        then
          cmd+=("--ptycho-template={{`{{ inputs.parameters.ptycho_template }}`}}")
        fi
        # use exec to make application as PID 1 for signal handling
        echo "Executing: ${cmd[@]}"
        exec "${cmd[@]}"
      volumeMounts:
      - name: session
        mountPath: "{{`{{ workflow.parameters.visitdir }}`}}"
    podSpecPatch: |
      containers:
      - name: main
        resources:
          requests:
            cpu: "{{`{{ inputs.parameters.nprocs }}`}}"
            memory: "{{`{{ inputs.parameters.memory }}`}}"
          limits:
            cpu: "{{`{{ inputs.parameters.nprocs }}`}}"
            memory: "{{`{{ inputs.parameters.memory }}`}}"
    volumes:
    - name: session
      hostPath:
        path:  "{{`{{ workflow.parameters.visitdir }}`}}"
        type: Directory
    tolerations:
    - key: nodetype
      operator: Equal
      value: cs05r_gpfs
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
            - key: has_gpfs03
              operator: In
              values:
              - "true"
