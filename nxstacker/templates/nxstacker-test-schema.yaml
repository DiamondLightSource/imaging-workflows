apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: nxstacker-test-with-schema
  annotations:
    workflows.argoproj.io/title: nxstacker-test-with-schema
    workflows.argoproj.io/description: |
      nxstacker is an utility to stack projections from different types of experiments to produce NeXus-compliance file(s).
    workflows.diamond.ac.uk/parameter-schema: |
      {{- .Files.Get "schema/nxstackerSchema.json" | nindent 6 }}
    workflows.diamond.ac.uk/ui-schema: |
      {{- .Files.Get "schema/nxstackerUISchema.json" | nindent 6 }}
spec:
  entrypoint: nxstacker
  arguments:
    parameters:
      - name: visitdir
        valueFrom:
          configMapKeyRef:
            name: sessionspaces
            key: data_directory
  templates:
    - name: nxstacker
      inputs:
        parameters:
          - name: experimentType
            value: "ptycho"
          - name: quiet
            value: false
          - name: dryRun
            value: false
          - name: projDir
            value: ""
          - name: projFile
            value: ""
          - name: nxtomoDir
            value: ""
          - name: rawDir
            value: ""
          - name: facility
            value: ""
          - name: fromScan
            value: ""
          - name: scanList
            value: ""
          - name: excludeScan
            value: ""
          - name: fromProj
            value: ""
          - name: projList
            value: ""
          - name: excludeProj
            value: ""
          - name: fromAngle
            value: ""
          - name: angleList
            value: ""
          - name: excludeAngle
            value: ""
          - name: sortByAngle
            value: false
          - name: padToMax
            value: false
          - name: compress
            value: false
          - name: skipCheck
            value: false
          # DPC specific arguments
          - name: retrievalMethod
            value: ""
          # XRF specific arguments
          - name: transition
            value: ""
          # pytycho specific arguments
          - name: saveComplex
            value: false
          - name: saveModulus
            value: false
          - name: savePhase
            value: false
          - name: removeRamp
            value: false
          - name: medianNorm
            value: false
          - name: unwrapPhase
            value: false
          - name: rescale
            value: false
      script:
        image: ghcr.io/diamondlightsource/nxstacker:latest
        command: [bash]
        source: |
          set -euo pipefail

          cmd=("tomojoin" "{{`{{inputs.parameters.experimentType}}`}}")

          [[ "{{`{{inputs.parameters.quiet}}`}}" == "true" ]] && cmd+=("--quiet")
          [[ "{{`{{inputs.parameters.dryRun}}`}}" == "true" ]] && cmd+=("--dry-run")
          [[ "{{`{{inputs.parameters.sortByAngle}}`}}" == "true" ]] && cmd+=("--sort-by-angle")
          [[ "{{`{{inputs.parameters.padToMax}}`}}" == "true" ]] && cmd+=("--pad-to-max")
          [[ "{{`{{inputs.parameters.compress}}`}}" == "true" ]] && cmd+=("--compress")
          [[ "{{`{{inputs.parameters.skipCheck}}`}}" == "true" ]] && cmd+=("--skip-check")
          [[ "{{`{{inputs.parameters.saveComplex}}`}}" == "true" ]] && cmd+=("--save-complex")
          [[ "{{`{{inputs.parameters.saveModulus}}`}}" == "true" ]] && cmd+=("--save-modulus")
          [[ "{{`{{inputs.parameters.savePhase}}`}}" == "true" ]] && cmd+=("--save-phase")
          [[ "{{`{{inputs.parameters.removeRamp}}`}}" == "true" ]] && cmd+=("--remove-ramp")
          [[ "{{`{{inputs.parameters.medianNorm}}`}}" == "true" ]] && cmd+=("--median-norm")
          [[ "{{`{{inputs.parameters.unwrapPhase}}`}}" == "true" ]] && cmd+=("--unwrap-phase")
          [[ "{{`{{inputs.parameters.rescale}}`}}" == "true" ]] && cmd+=("--rescale")

          [[ -n "{{`{{inputs.parameters.projDir}}`}}" ]] && cmd+=("--proj-dir={{`{{inputs.parameters.projDir}}`}}")
          [[ -n "{{`{{inputs.parameters.projFile}}`}}" ]] && cmd+=("--proj-file={{`{{inputs.parameters.projFile}}`}}")
          [[ -n "{{`{{inputs.parameters.nxtomoDir}}`}}" ]] && cmd+=("--nxtomo-dir={{`{{inputs.parameters.nxtomoDir}}`}}")
          [[ -n "{{`{{inputs.parameters.rawDir}}`}}" ]] && cmd+=("--raw-dir={{`{{inputs.parameters.rawDir}}`}}")
          [[ -n "{{`{{inputs.parameters.facility}}`}}" ]] && cmd+=("--facility={{`{{inputs.parameters.facility}}`}}")
          [[ -n "{{`{{inputs.parameters.fromScan}}`}}" ]] && cmd+=("--from-scan={{`{{inputs.parameters.fromScan}}`}}")
          [[ -n "{{`{{inputs.parameters.scanList}}`}}" ]] && cmd+=("--scan-list={{`{{inputs.parameters.scanList}}`}}")
          [[ -n "{{`{{inputs.parameters.excludeScan}}`}}" ]] && cmd+=("--exclude-scan={{`{{inputs.parameters.excludeScan}}`}}")
          [[ -n "{{`{{inputs.parameters.fromProj}}`}}" ]] && cmd+=("--from-proj={{`{{inputs.parameters.fromProj}}`}}")
          [[ -n "{{`{{inputs.parameters.projList}}`}}" ]] && cmd+=("--proj-list={{`{{inputs.parameters.projList}}`}}")
          [[ -n "{{`{{inputs.parameters.excludeProj}}`}}" ]] && cmd+=("--exclude-proj={{`{{inputs.parameters.excludeProj}}`}}")
          [[ -n "{{`{{inputs.parameters.fromAngle}}`}}" ]] && cmd+=("--from-angle={{`{{inputs.parameters.fromAngle}}`}}")
          [[ -n "{{`{{inputs.parameters.angleList}}`}}" ]] && cmd+=("--angle-list={{`{{inputs.parameters.angleList}}`}}")
          [[ -n "{{`{{inputs.parameters.excludeAngle}}`}}" ]] && cmd+=("--exclude-angle={{`{{inputs.parameters.excludeAngle}}`}}")
          [[ -n "{{`{{inputs.parameters.retrievalMethod}}`}}" ]] && cmd+=("--retrieval-method={{`{{inputs.parameters.retrievalMethod}}`}}")
          [[ -n "{{`{{inputs.parameters.transition}}`}}" ]] && cmd+=("--transition={{`{{inputs.parameters.transition}}`}}")

          echo "Executing: ${cmd[*]}"
          exec "${cmd[@]}"
        volumeMounts:
          - name: session
            mountPath: "{{`{{workflow.parameters.visitdir}}`}}"
      volumes:
        - name: session
          hostPath:
            path: "{{`{{workflow.parameters.visitdir}}`}}`}}"
            type: Directory
